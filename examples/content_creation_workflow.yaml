name: "content_creation_pipeline"
description: "Transform text into video content with OpenAI + Replicate + ElevenLabs"
api_base: "https://api.openai.com"

variables:
  input_text: "A journey through sustainable living: Start your morning with a reusable coffee cup, then bike to work through the city park. At lunch, visit the local farmers market for fresh vegetables. End the day by reading about renewable energy while your solar panels charge your phone."
  voice_style: "calm and engaging"
  image_style: "photorealistic, cinematic lighting"

steps:
  # Step 1: Analyze text and break into scenes
  - name: "analyze_scenes"
    endpoint: "/v1/chat/completions"
    method: "POST"
    auth:
      type: "bearer"
      token: "${OPENAI_API_KEY}"
    headers:
      Content-Type: "application/json"
    payload_template: |
      {
        "model": "gpt-4",
        "messages": [
          {
            "role": "system",
            "content": "You are a video content creator. Break text into visual scenes and create image generation prompts."
          },
          {
            "role": "user",
            "content": "Break this text into 3-4 visual scenes and create detailed image generation prompts for each scene. Text: {{ input_text }}\n\nReturn as JSON: {\"scenes\": [{\"description\": \"scene description\", \"image_prompt\": \"detailed prompt for image generation\", \"duration\": \"3-5s\"}]}"
          }
        ],
        "max_tokens": 800,
        "temperature": 0.3
      }
    extract_fields:
      scenes_raw: "choices.0.message.content"
    response_transform: |
      {% set scenes_json = scenes_raw | regex_replace('```json|```', '') | trim %}
      {{ scenes_json | from_json }}
    timeout: "30s"

  # Step 2: Generate voiceover script (parallel with image generation)
  - name: "enhance_voiceover"
    endpoint: "/v1/chat/completions"
    method: "POST"
    depends_on: ["analyze_scenes"]
    parallel_group: "content_generation"
    headers:
      Content-Type: "application/json"
    payload_template: |
      {
        "model": "gpt-4",
        "messages": [
          {
            "role": "system",
            "content": "You are a professional voiceover scriptwriter. Create engaging, natural-sounding narration that matches the visual scenes."
          },
          {
            "role": "user",
            "content": "Create a {{ voice_style }} voiceover script for these scenes: {{ analyze_scenes.scenes }}. Make it flow naturally and engaging for video narration. Keep it under 60 seconds total."
          }
        ],
        "max_tokens": 400,
        "temperature": 0.7
      }
    extract_fields:
      voiceover_script: "choices.0.message.content"
    timeout: "30s"

  # Step 3: Generate images for each scene (parallel)
  - name: "generate_scene_images"
    api_base: "https://api.replicate.com"
    endpoint: "/v1/predictions"
    method: "POST"
    auth:
      type: "api_key"
      header_name: "Authorization"
      api_key: "Token ${REPLICATE_API_TOKEN}"
    depends_on: ["analyze_scenes"]
    parallel_group: "content_generation"
    headers:
      Content-Type: "application/json"
    payload_template: |
      {
        "version": "ac732df83cea7fff18b8472768c88ad041fa750ff7682a21affe81863cbe77e4",
        "input": {
          "prompt": "{{ image_style }}, {{ analyze_scenes.scenes[0].image_prompt }}, high quality, 16:9 aspect ratio",
          "num_outputs": 1,
          "aspect_ratio": "16:9",
          "output_format": "png",
          "output_quality": 90
        }
      }
    poll_for_completion: true
    poll_interval: "5s"
    poll_timeout: "10m"
    completion_field: "status"
    completion_values: ["succeeded"]
    result_field: "output.0"
    extract_fields:
      image_url: "output.0"
    download_response: true
    store_in_r2: true
    r2_bucket: "content-assets"
    r2_key_template: "images/scene_{{ name }}_{{ now() }}.png"
    timeout: "15m"

  # Step 4: Generate voiceover audio
  - name: "generate_voiceover"
    api_base: "https://api.elevenlabs.io"
    endpoint: "/v1/text-to-speech/21m00Tcm4TlvDq8ikWAM"  # Rachel voice
    method: "POST"
    auth:
      type: "api_key"
      header_name: "xi-api-key"
      api_key: "${ELEVENLABS_API_KEY}"
    depends_on: ["enhance_voiceover"]
    headers:
      Content-Type: "application/json"
    payload_template: |
      {
        "text": "{{ enhance_voiceover.voiceover_script }}",
        "model_id": "eleven_multilingual_v2",
        "voice_settings": {
          "stability": 0.7,
          "similarity_boost": 0.8,
          "style": 0.3
        }
      }
    download_response: true
    store_in_r2: true
    r2_bucket: "content-assets"
    r2_key_template: "audio/voiceover_{{ name }}_{{ now() }}.mp3"
    timeout: "2m"

  # Step 5: Create final compilation metadata
  - name: "compile_results"
    api_base: "https://httpbin.org"
    endpoint: "/post"
    method: "POST"
    depends_on: ["generate_scene_images", "generate_voiceover"]
    headers:
      Content-Type: "application/json"
    payload_template: |
      {
        "workflow": "content_creation_pipeline",
        "input_text": "{{ input_text }}",
        "scenes": {{ analyze_scenes.scenes | tojson }},
        "voiceover_script": "{{ enhance_voiceover.voiceover_script }}",
        "assets": {
          "scene_image": "{{ generate_scene_images.r2_url }}",
          "voiceover_audio": "{{ generate_voiceover.r2_url }}"
        },
        "metadata": {
          "total_scenes": {{ analyze_scenes.scenes | length }},
          "voice_style": "{{ voice_style }}",
          "image_style": "{{ image_style }}",
          "completion_time": "{{ now() }}"
        }
      }
    response_transform: |
      {
        "success": true,
        "workflow_complete": true,
        "input": {
          "original_text": "{{ input_text }}",
          "processing_style": {
            "voice": "{{ voice_style }}",
            "visual": "{{ image_style }}"
          }
        },
        "outputs": {
          "scenes_breakdown": {{ analyze_scenes.scenes | tojson }},
          "enhanced_voiceover": "{{ enhance_voiceover.voiceover_script }}",
          "generated_image": "{{ generate_scene_images.r2_url }}",
          "generated_audio": "{{ generate_voiceover.r2_url }}"
        },
        "workflow_metadata": {{ response.json.metadata | tojson }}
      }

# Required environment variables:
# OPENAI_API_KEY=sk-...
# REPLICATE_API_TOKEN=r8_...
# ELEVENLABS_API_KEY=...
# R2_ACCESS_KEY_ID=...
# R2_SECRET_ACCESS_KEY=...