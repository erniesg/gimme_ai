name: "multi_api_r2_test"
description: "Complete multi-step workflow with OpenAI, Replicate, ElevenLabs, and R2 storage"
api_base: "https://api.openai.com"

variables:
  content_topic: "sustainable urban gardening"
  voice_style: "enthusiastic educator"
  image_style: "vibrant modern illustration"

steps:
  # Step 1: Generate detailed content outline
  - name: "create_content_outline"
    endpoint: "/v1/chat/completions"
    method: "POST"
    auth:
      type: "bearer"
      token: "${OPENAI_API_KEY}"
    headers:
      Content-Type: "application/json"
    payload_template: |
      {
        "model": "gpt-4",
        "messages": [
          {
            "role": "system", 
            "content": "You are an expert content creator who specializes in educational material about sustainable living. Create comprehensive, engaging content that teaches practical skills."
          },
          {
            "role": "user",
            "content": "Create a detailed content outline for '{{ content_topic }}'. Include: 1) Hook/introduction (30 words), 2) 3 main educational points with examples, 3) Call-to-action. Format as structured JSON with sections: hook, main_points (array), call_to_action, visual_description."
          }
        ],
        "max_tokens": 800,
        "temperature": 0.7
      }
    extract_fields:
      content_outline: "choices.0.message.content"
      tokens_used: "usage.total_tokens"
    store_in_r2: true
    r2_bucket: "content-assets"
    r2_key_template: "outlines/{{ name }}_{{ content_topic | replace(' ', '_') }}_outline.json"
    timeout: "45s"

  # Step 2: Create voiceover script (depends on outline)
  - name: "generate_voiceover_script"
    endpoint: "/v1/chat/completions"
    method: "POST"
    depends_on: ["create_content_outline"]
    headers:
      Content-Type: "application/json"
    payload_template: |
      {
        "model": "gpt-4",
        "messages": [
          {
            "role": "system",
            "content": "You are a professional voiceover script writer. Create scripts that sound natural when spoken aloud, with proper pacing, emphasis, and emotional tone."
          },
          {
            "role": "user", 
            "content": "Transform this content outline into a natural-sounding {{ voice_style }} voiceover script for audio narration. Make it conversational, engaging, and exactly 90 seconds when read aloud. Content outline: {{ create_content_outline.content_outline }}"
          }
        ],
        "max_tokens": 600,
        "temperature": 0.6
      }
    extract_fields:
      voiceover_script: "choices.0.message.content"
      script_tokens: "usage.total_tokens"
    store_in_r2: true
    r2_bucket: "content-assets"
    r2_key_template: "scripts/{{ name }}_voiceover_script.txt"
    timeout: "45s"

  # Step 3: Generate image (parallel with voiceover creation)  
  - name: "generate_visual_content"
    api_base: "https://api.replicate.com"
    endpoint: "/v1/predictions"
    method: "POST"
    auth:
      type: "api_key"
      header_name: "Authorization"
      api_key: "Token ${REPLICATE_API_TOKEN}"
    depends_on: ["create_content_outline"]
    parallel_group: "content_creation"
    headers:
      Content-Type: "application/json"
    payload_template: |
      {
        "version": "ac732df83cea7fff18b8472768c88ad041fa750ff7682a21affe81863cbe77e4", 
        "input": {
          "prompt": "{{ image_style }} showing {{ content_topic }}, educational infographic style, clean modern design, high quality, detailed, suitable for social media",
          "num_outputs": 1,
          "aspect_ratio": "16:9", 
          "output_format": "png",
          "output_quality": 95
        }
      }
    poll_for_completion: true
    poll_interval: "8s"
    poll_timeout: "12m"
    completion_field: "status"
    completion_values: ["succeeded"]
    result_field: "output.0"
    extract_fields:
      image_url: "output.0"
      generation_id: "id"
    download_response: true
    store_in_r2: true
    r2_bucket: "content-assets"
    r2_key_template: "images/{{ name }}_{{ content_topic | replace(' ', '_') }}_visual.png"
    timeout: "15m"
    retry:
      limit: 3
      delay: "30s"
      backoff: "exponential"

  # Step 4: Create audio narration (parallel with image)
  - name: "generate_audio_narration"
    api_base: "https://api.elevenlabs.io"
    endpoint: "/v1/text-to-speech/21m00Tcm4TlvDq8ikWAM"  # Adam voice
    method: "POST"
    auth:
      type: "api_key"
      header_name: "xi-api-key"
      api_key: "${ELEVENLABS_API_KEY}"
    depends_on: ["generate_voiceover_script"]
    parallel_group: "content_creation"
    headers:
      Content-Type: "application/json"
    payload_template: |
      {
        "text": "{{ generate_voiceover_script.voiceover_script }}",
        "model_id": "eleven_multilingual_v2",
        "voice_settings": {
          "stability": 0.75,
          "similarity_boost": 0.85,
          "style": 0.3,
          "use_speaker_boost": true
        }
      }
    download_response: true
    store_in_r2: true
    r2_bucket: "content-assets"
    r2_key_template: "audio/{{ name }}_{{ content_topic | replace(' ', '_') }}_narration.mp3"
    timeout: "3m"
    retry:
      limit: 2
      delay: "15s"

  # Step 5: Create final content package (depends on all previous)
  - name: "create_content_package"
    api_base: "https://api.openai.com"
    endpoint: "/v1/chat/completions"
    method: "POST"
    depends_on: ["content_creation"]  # Waits for both image and audio
    headers:
      Content-Type: "application/json"
    payload_template: |
      {
        "model": "gpt-3.5-turbo",
        "messages": [
          {
            "role": "system",
            "content": "You are a content curator creating final content packages. Provide structured metadata and usage instructions."
          },
          {
            "role": "user",
            "content": "Create a comprehensive content package summary for '{{ content_topic }}'. Include usage recommendations, target audience, and distribution suggestions. Original outline: {{ create_content_outline.content_outline }}"
          }
        ],
        "max_tokens": 400
      }
    extract_fields:
      package_summary: "choices.0.message.content"
      final_tokens: "usage.total_tokens"
    store_in_r2: true
    r2_bucket: "content-assets"
    r2_key_template: "packages/{{ name }}_final_package.json"
    response_transform: |
      {
        "workflow_id": "{{ name }}",
        "topic": "{{ content_topic }}",
        "created_at": "{{ now() }}",
        "content_outline": {{ create_content_outline.content_outline | tojson }},
        "voiceover_script": {{ generate_voiceover_script.voiceover_script | tojson }},
        "package_summary": {{ package_summary | tojson }},
        "assets": {
          "outline_file": "{{ create_content_outline.r2_url }}",
          "script_file": "{{ generate_voiceover_script.r2_url }}",
          "visual_image": "{{ generate_visual_content.r2_url }}",
          "audio_narration": "{{ generate_audio_narration.r2_url }}"
        },
        "metadata": {
          "total_tokens_used": {{ create_content_outline.tokens_used + generate_voiceover_script.script_tokens + final_tokens }},
          "image_generation_id": "{{ generate_visual_content.generation_id }}",
          "processing_time_estimate": "8-12 minutes",
          "content_length": "90 seconds audio"
        },
        "usage_recommendations": {{ package_summary | tojson }},
        "workflow_success": true
      }

# Required environment variables for full functionality:
# OPENAI_API_KEY - OpenAI API key for content generation
# REPLICATE_API_TOKEN - Replicate API token for image generation  
# ELEVENLABS_API_KEY - ElevenLabs API key for voice synthesis
# CLOUDFLARE_ACCOUNT_ID - Cloudflare account ID for R2
# R2_ACCESS_KEY_ID - R2 access key ID
# R2_SECRET_ACCESS_KEY - R2 secret access key

# This workflow demonstrates:
# 1. Sequential content development (outline â†’ script)
# 2. Parallel content creation (image + audio simultaneously)
# 3. Complex dependency management
# 4. File storage with organized R2 structure
# 5. Response transformation for final package
# 6. Comprehensive error handling and retries
# 7. Token usage tracking across multiple AI services
# 8. Real-world content creation pipeline